@model BlobSampleApp1.Models.FilesOverviewViewModel


<div class="row">
    <Strong class="col-3">Files</Strong>
    <div class="dropdown col-6 col-sm-6 col-md-4 col-lg-3 col-xl-2 float-right vertical-align">
        <button class="btn btn-light dropdown-toggle col-12" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Containers
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <div class="dropdown-filter-results">
                @foreach (var item in Model.Containers)
                {
                    <label class="dropdown-item filter-item">
                        @if (item.Selected)
                        {
                            <input type="checkbox" class="tool-type-filter" name="Containers[]" value="@item.Value" checked /> @item.Text
                        }
                        else
                        {
                            <input type="checkbox" class="tool-type-filter" name="Containers[]" value="@item.Value" /> @item.Text
                        }
                    </label>
                }
            </div>
            <div class="dropdown-divider"></div>
            <label class="dropdown-item filter-item mb-0">
                <input type="checkbox" class="check-all-filter" /> <strong>Select All</strong>
            </label>
        </div>
    </div>
</div>

<div id="filesContainer">
    @await Html.PartialAsync("~/Views/Home/FilesList.cshtml", Model.Files)
</div>

<script>
    $(document).ready(function () {
        // Prevent closing dropdown for filter items on click
        $('.filter-item').on('click', function (e) {
            e.stopPropagation();
        });

        // Check all checkboxes (filters)
        $('input.check-all-filter').on('change', function (e) {
            var checked = this.checked;
            $(this).parents('.dropdown-menu').find('.filter-item input').each(function () {
                $(this).prop("checked", checked);
            });

        });
    });

    $('input.tool-type-filter').on('change', function () {
        $.post("/Home/FilesList", createFilterData(), function (data) {
            let fileContainer = $("#filesContainer");
            fileContainer.html(data);
        })
    });

    // create filter
    function createFilterData() {
        let data = {};
        data.containers = [];

        $('input[name="Containers[]"]:checked').each(function () {
            data.containers.push($(this).val());
        });

        return data;
    }
</script>
